[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "doc-chat"
version = "0.1.0"
description = "A document chat application with AI-powered conversations"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Sagar Garg", email = "gargsaar@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    # Core web framework
    "Flask==2.3.1",
    "flask_sqlalchemy==3.0.3",
    "flask_cors==4.0.0",
    "Werkzeug==2.3.1",
    "gunicorn>=20.1.0",
    
    # LangChain v0.3 ecosystem - compatible versions
    "langchain==0.3.27",
    "langchain-openai==0.2.14",
    "langchain-community>=0.3.29",
    "langchain-text-splitters>=0.3.0,<0.4.0",
    "langchain-chroma>=0.1.4",
    "langchain-core==0.3.75",
    
    # OpenAI and embeddings
    "openai==1.102.0",
    "tiktoken>=0.11.0",
    
    # Vector database - allow newer compatible versions
    "chromadb>=0.5.23",
    
    # Task queue
    "celery==5.3.1",
    "redis==5.0.0",
    
    # Cloud storage
    "boto3==1.26.122",
    "botocore==1.29.122",
    
    # PDF processing
    "pypdf==3.15.4",
    
    # Utilities
    "python-dotenv==1.0.0",
    "click==8.1.3",
    "invoke==2.2.0",
    "watchdog==3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "flake8>=5.0",
    "mypy>=1.0",
]

[project.urls]
Homepage = "https://github.com/gargsaar/doc-chat"
Repository = "https://github.com/gargsaar/doc-chat"
Issues = "https://github.com/gargsaar/doc-chat/issues"

[tool.setuptools]
package-dir = {"" = "."}
packages = ["app"]

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
