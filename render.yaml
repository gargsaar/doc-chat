services:
  # Main web service
  - type: web
    name: doc-chat-web
    env: python
    plan: starter  # Upgrade to standard for production
    region: oregon
    branch: main
    buildCommand: "pip install --upgrade pip && pip install -r requirements.txt"
    startCommand: "flask --app app.web init-db && inv prod"  # Initialize DB then start
    healthCheckPath: "/"
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: APP_ENV
        value: production
      - key: SECRET_KEY
        sync: false  # Set this in Render dashboard
      - key: OPENAI_API_KEY
        sync: false  # Set this in Render dashboard
      - key: SQLALCHEMY_DATABASE_URI
        fromDatabase:
          name: doc-chat-db
          property: connectionString
      - key: REDIS_URI
        fromService:
          type: redis
          name: doc-chat-redis
          property: connectionString
      - key: UPLOAD_URL
        sync: false  # Set this in Render dashboard
      - key: CHROMA_DB_PATH
        value: "./chroma_db"
  
  # PostgreSQL database
  - type: pserv
    name: doc-chat-db
    env: postgresql
    plan: starter  # Free tier available
    region: oregon
    databaseName: doc_chat
    databaseUser: doc_chat_user

  # Redis for Celery task queue
  - type: redis
    name: doc-chat-redis
    plan: starter  # Free tier available
    region: oregon
    maxmemoryPolicy: allkeys-lru

  # Background worker for Celery tasks
  - type: worker
    name: doc-chat-worker
    env: python
    plan: starter
    region: oregon
    branch: main
    buildCommand: "pip install --upgrade pip && pip install -r requirements.txt"
    startCommand: "inv prodworker"  # Production worker without auto-restart
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: APP_ENV
        value: production
      - key: SECRET_KEY
        sync: false  # Set this in Render dashboard
      - key: OPENAI_API_KEY
        sync: false  # Set this in Render dashboard
      - key: SQLALCHEMY_DATABASE_URI
        fromDatabase:
          name: doc-chat-db
          property: connectionString
      - key: REDIS_URI
        fromService:
          type: redis
          name: doc-chat-redis
          property: connectionString
      - key: UPLOAD_URL
        sync: false  # Set this in Render dashboard
      - key: CHROMA_DB_PATH
        value: "./chroma_db"

# Environment variables to set in Render dashboard:
# - SECRET_KEY: A secure random string for sessions
# - OPENAI_API_KEY: Your OpenAI API key
# - UPLOAD_URL: URL for file uploads (if using external storage)
# Optional AWS S3 variables if using S3:
# - AWS_ACCESS_KEY_ID
# - AWS_SECRET_ACCESS_KEY  
# - AWS_REGION
